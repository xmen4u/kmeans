0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.4.27
3 info using node@v0.10.31
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /Users/gtam/.npm/3a52ce78-.lock
10 verbose tar pack [ '/Users/gtam/.npm/kmeans/0.0.2/package.tgz', '.' ]
11 verbose tarball /Users/gtam/.npm/kmeans/0.0.2/package.tgz
12 verbose folder .
13 info prepublish kmeans@0.0.2
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /Users/gtam/.npm/1f1177db-tar.lock
16 silly lockFile 7e9ad170-tam-npm-kmeans-0-0-2-package-tgz tar:///Users/gtam/.npm/kmeans/0.0.2/package.tgz
17 verbose lock tar:///Users/gtam/.npm/kmeans/0.0.2/package.tgz /Users/gtam/.npm/7e9ad170-tam-npm-kmeans-0-0-2-package-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 7e9ad170-tam-npm-kmeans-0-0-2-package-tgz tar:///Users/gtam/.npm/kmeans/0.0.2/package.tgz
21 silly lockFile 7e9ad170-tam-npm-kmeans-0-0-2-package-tgz tar:///Users/gtam/.npm/kmeans/0.0.2/package.tgz
22 silly lockFile c4e9b669-rs-gtam-npm-kmeans-0-0-2-package /Users/gtam/.npm/kmeans/0.0.2/package
23 verbose lock /Users/gtam/.npm/kmeans/0.0.2/package /Users/gtam/.npm/c4e9b669-rs-gtam-npm-kmeans-0-0-2-package.lock
24 silly lockFile c4e9b669-rs-gtam-npm-kmeans-0-0-2-package /Users/gtam/.npm/kmeans/0.0.2/package
25 silly lockFile c4e9b669-rs-gtam-npm-kmeans-0-0-2-package /Users/gtam/.npm/kmeans/0.0.2/package
26 silly lockFile 3a52ce78- .
27 silly lockFile 3a52ce78- .
28 silly publish { name: 'kmeans',
28 silly publish   version: '0.0.2',
28 silly publish   description: 'k-Means clustering algorithm',
28 silly publish   main: 'index.js',
28 silly publish   scripts: { test: 'grunt travis --verbose' },
28 silly publish   keywords: [ 'kmeans', 'means', 'cluster', 'classify' ],
28 silly publish   dependencies:
28 silly publish    { grunt: '^0.4.5',
28 silly publish      'grunt-contrib-jshint': '^0.10.0',
28 silly publish      'grunt-contrib-watch': '^0.6.1',
28 silly publish      jshint: '^2.5.5',
28 silly publish      matchdep: '^0.3.0' },
28 silly publish   devDependencies:
28 silly publish    { 'grunt-contrib-jshint': '^0.10.0',
28 silly publish      'grunt-contrib-watch': '^0.6.1' },
28 silly publish   author: { name: 'Gil Tamari' },
28 silly publish   license: 'BSD',
28 silly publish   readme: '[![Build Status](https://travis-ci.org/xmen4u/kmeans.svg)](https://travis-ci.org/xmen4u/kmeans)\n\n\n## KMeans clustering algorithm \n============================================\n\nA node module, that implements k-means clustering algorithm\n\nk-means is a super-fast supervised algorithm for clustering points \nit does this in O(n) Space complexity and O(t * k * n) time complexity \nit can be parallelized when the data are divided into N sets and each separate data set is clusterd\nthe algorithm converges quickly\n\nIt is also provided with a full example of usage and dataset creation.\nI hope to provide a working stack [FE + BE] to use this with real-time and cache capabilities\n\nusing jSHint, matchdep , stream, grunt.js \n\nUse this with my permission only\n\n## ToC\n---------------------\n\n1. [Main app](#main)\n\n\n<a name="main">Main app</a>\n---------------------\n\n\n## Install\n```\nnpm install kmeans\n```\n\nplace the ```distance.js``` where ever you want and include it, i\'ve used an iOc style \nso you could adjust it and plug-it in the module\n\n\n## Initialization\n\nwe need to initialize the distance object, you can add any distance metric you wish \nto distance.js\n```\nvar Distance \t = require(\'./lib/distance\'),\n\tdistances    = new Distance(),\n\t// KMeans section\n\tKMeans       = require(\'./lib/kmeans.js\'),\n\tkmeans,\n\t// File section\n\tfs           = require(\'fs\'),\n\treadline     = require(\'readline\'), // using the UNSTABLE readline built-in node module\n\t// Stream section\n\tpoints       = [],\n\trl, // read-line\n\tin_stream\n\n```\nafter initialization, you need to create a multi-dimensional vector, an array of arrays:\n```[[1,2],[1,4],[2,5],[5,9],...,[10,12]]```\njust like the "creation of the data set line", you can find the model inside /models , it looks like:\n\n```\n\n\nin code we grab it via stream from a line-by-line [newline] structured flat file [so we won\'t have limit on memory space]\n```\nin_stream = fs.createReadStream(\'./books.txt\'),\nrl = readline.createInterface({input: in_stream,terminal: false})\n\nrl.on(\'line\', function(line) {\n\tpoints.push(JSON.parse(line))\n});\n\nrl.on(\'close\', function() {\n\tvar clustering_obj\n\n\t// initializing it here, because of our new custom distance function\n\tkmeans = new KMeans(distances)\n\n    clustering_obj = kmeans.cluster(points,29,\'customDistance\')\n    console.log(\'FINISHED reading \' + points.length + \' and clustering them\')\n    console.log(clustering_obj)\n\n});\n```\nfinally we can use the algorithm on specific coordinates of the vector[s], we do that\nvia the translateToSub\n```\nfunction translateToSub(in_point,based_on_cells){\n  var ret=[];\n\n  based_on_cells.forEach(function(index){\n    ret.push(in_point[index]);\n  });\n  return ret;\n}// translateToSub\n\n\ndistances.customDistance = function(v1,v2){\n\tvar based_on_cells = [0,6] // where the 2-d cells reside in\n\n\tif (based_on_cells instanceof Array){\n\t  v1 = translateToSub(v1,based_on_cells)\n\n\t  v2 = translateToSub(v2,based_on_cells)\n\n\t}// if - based_on_cells\n\n\treturn distances.euclidean(v1,v2)//haversine(v1,v2)\n}\n\n```\n\n\n## License\n\nBSD -  ask for my permission\n',
28 silly publish   readmeFilename: 'README.md',
28 silly publish   gitHead: 'faa2eae9bc4ee8a1a12d21c8133fe2aea8efc8f5',
28 silly publish   _id: 'kmeans@0.0.2',
28 silly publish   _shasum: '6f2c7f1d9ee381fac0352d0c7aeca07ad984ae38',
28 silly publish   _from: '.' }
29 verbose request where is /kmeans
30 verbose request registry https://registry.npmjs.org/
31 verbose request id 933a0f153f96435f
32 verbose url raw /kmeans
33 verbose url resolving [ 'https://registry.npmjs.org/', './kmeans' ]
34 verbose url resolved https://registry.npmjs.org/kmeans
35 verbose request where is https://registry.npmjs.org/kmeans
36 info trying registry request attempt 1 at 01:57:23
37 http PUT https://registry.npmjs.org/kmeans
38 http 403 https://registry.npmjs.org/kmeans
39 verbose headers { date: 'Fri, 19 Sep 2014 22:57:31 GMT',
39 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
39 verbose headers   'content-type': 'application/json',
39 verbose headers   'cache-control': 'max-age=60',
39 verbose headers   'content-length': '6715',
39 verbose headers   'accept-ranges': 'bytes',
39 verbose headers   via: '1.1 varnish',
39 verbose headers   'x-served-by': 'cache-ams4124-AMS',
39 verbose headers   'x-cache': 'MISS',
39 verbose headers   'x-cache-hits': '0',
39 verbose headers   'x-timer': 'S1411167443.864006,VS0,VE7244',
39 verbose headers   'keep-alive': 'timeout=10, max=50',
39 verbose headers   connection: 'Keep-Alive' }
40 error publish Failed PUT 403
41 error Error: forbidden user: xmen4u not authorized to modify kmeans
41 error Changed: description "Javascript implementation of the K-means clustering algorithm." -> "k-Means clustering algorithm"
41 error Changed: dist-tags.latest "0.0.1" -> "0.0.2"
41 error Added: versions.0.0.2
41 error Changed: readme "# Demo #\u000a\u000a[Live demo!](http://olalonde.github.com/kmeans.js/)\u000a\u000a![K-means demo](http://dl.dropbox.com/u/3750008/Screenshots/1.png)\u000a\u000a## On your machine ##\u000a\u000a    python -m SimpleHTTPServer;\u000a\u000aOpen your browser at\u000a[http://localhost:8000/demo/animation.html](http://localhost:8000/demo/animation.html)\u000a\u000a# Usage #\u000a\u000a    var kmeans = require('kmeans');\u000a    var km = kmeans.create([\u000a      [1, 2],\u000a      [5, 4],\u000a      [2, 5],\u000a      [8, 4]\u000a    ], 3);\u000a\u000a    var result = km.process();\u000a\u000a    console.log(result.means);\u000a    console.log(result.clusters);\u000a\u000a## Under the hood ##\u000a\u000a    for(var i = 0; i < km.iteratoinCount(); i++) {\u000a      // clusters and means generated at iteration i\u000a      console.log(km.iteration(i));\u000a    }\u000a\u000a# License #\u000a\u000aCopyright (c) 2012 Olivier Lalonde <olalonde@gmail.com>\u000a\u000aPermission is hereby granted, free of charge, to any person obtaining a\u000acopy of this software and associated documentation files (the\u000a\"Software\"), to deal in the Software without restriction, including\u000awithout limitation the rights to use, copy, modify, merge, publish,\u000adistribute, sublicense, and/or sell copies of the Software, and to\u000apermit persons to whom the Software is furnished to do so, subject to\u000athe following conditions:\u000a\u000aThe above copyright notice and this permission notice shall be included\u000ain all copies or substantial portions of the Software.\u000a\u000aTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\u000aOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\u000aMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\u000aIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\u000aCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\u000aTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\u000aSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\u000a" -> "[![Build Status](https://travis-ci.org/xmen4u/kmeans.svg)](https://travis-ci.org/xmen4u/kmeans)\u000a\u000a\u000a## KMeans clustering algorithm \u000a============================================\u000a\u000aA node module, that implements k-means clustering algorithm\u000a\u000ak-means is a super-fast supervised algorithm for clustering points \u000ait does this in O(n) Space complexity and O(t * k * n) time complexity \u000ait can be parallelized when the data are divided into N sets and each separate data set is clusterd\u000athe algorithm converges quickly\u000a\u000aIt is also provided with a full example of usage and dataset creation.\u000aI hope to provide a working stack [FE + BE] to use this with real-time and cache capabilities\u000a\u000ausing jSHint, matchdep , stream, grunt.js \u000a\u000aUse this with my permission only\u000a\u000a## ToC\u000a---------------------\u000a\u000a1. [Main app](#main)\u000a\u000a\u000a<a name=\"main\">Main app</a>\u000a---------------------\u000a\u000a\u000a## Install\u000a```\u000anpm install kmeans\u000a```\u000a\u000aplace the ```distance.js``` where ever you want and include it, i've used an iOc style \u000aso you could adjust it and plug-it in the module\u000a\u000a\u000a## Initialization\u000a\u000awe need to initialize the distance object, you can add any distance metric you wish \u000ato distance.js\u000a```\u000avar Distance \u0009 = require('./lib/distance'),\u000a\u0009distances    = new Distance(),\u000a\u0009// KMeans section\u000a\u0009KMeans       = require('./lib/kmeans.js'),\u000a\u0009kmeans,\u000a\u0009// File section\u000a\u0009fs           = require('fs'),\u000a\u0009readline     = require('readline'), // using the UNSTABLE readline built-in node module\u000a\u0009// Stream section\u000a\u0009points       = [],\u000a\u0009rl, // read-line\u000a\u0009in_stream\u000a\u000a```\u000aafter initialization, you need to create a multi-dimensional vector, an array of arrays:\u000a```[[1,2],[1,4],[2,5],[5,9],...,[10,12]]```\u000ajust like the \"creation of the data set line\", you can find the model inside /models , it looks like:\u000a\u000a```\u000a\u000a\u000ain code we grab it via stream from a line-by-line [newline] structured flat file [so we won't have limit on memory space]\u000a```\u000ain_stream = fs.createReadStream('./books.txt'),\u000arl = readline.createInterface({input: in_stream,terminal: false})\u000a\u000arl.on('line', function(line) {\u000a\u0009points.push(JSON.parse(line))\u000a});\u000a\u000arl.on('close', function() {\u000a\u0009var clustering_obj\u000a\u000a\u0009// initializing it here, because of our new custom distance function\u000a\u0009kmeans = new KMeans(distances)\u000a\u000a    clustering_obj = kmeans.cluster(points,29,'customDistance')\u000a    console.log('FINISHED reading ' + points.length + ' and clustering them')\u000a    console.log(clustering_obj)\u000a\u000a});\u000a```\u000afinally we can use the algorithm on specific coordinates of the vector[s], we do that\u000avia the translateToSub\u000a```\u000afunction translateToSub(in_point,based_on_cells){\u000a  var ret=[];\u000a\u000a  based_on_cells.forEach(function(index){\u000a    ret.push(in_point[index]);\u000a  });\u000a  return ret;\u000a}// translateToSub\u000a\u000a\u000adistances.customDistance = function(v1,v2){\u000a\u0009var based_on_cells = [0,6] // where the 2-d cells reside in\u000a\u000a\u0009if (based_on_cells instanceof Array){\u000a\u0009  v1 = translateToSub(v1,based_on_cells)\u000a\u000a\u0009  v2 = translateToSub(v2,based_on_cells)\u000a\u000a\u0009}// if - based_on_cells\u000a\u000a\u0009return distances.euclidean(v1,v2)//haversine(v1,v2)\u000a}\u000a\u000a```\u000a\u000a\u000a## License\u000a\u000aBSD -  ask for my permission\u000a"
41 error Changed: time.modified "2012-03-03T01:17:36.944Z" -> "2014-09-19T22:55:27.273Z"
41 error Added: time.0.0.2
41 error Changed: author.name "Olivier Lalonde" -> "Gil Tamari"
41 error Deleted: author.email
41 error Deleted: author.url
41 error Deleted: repository
41 error Changed: readmeFilename "" -> "README.md"
41 error Deleted: homepage
41 error Added: keywords
41 error Added: license
41 error Added: _attachments: kmeans
41 error     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:308:14)
41 error     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:246:65)
41 error     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:236:22)
41 error     at Request.emit (events.js:98:17)
41 error     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1142:14)
41 error     at Request.emit (events.js:117:20)
41 error     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1096:12)
41 error     at IncomingMessage.emit (events.js:117:20)
41 error     at _stream_readable.js:943:16
41 error     at process._tickCallback (node.js:419:13)
42 error If you need help, you may report this *entire* log,
42 error including the npm and node versions, at:
42 error     <http://github.com/npm/npm/issues>
43 error System Darwin 13.3.0
44 error command "node" "/usr/local/bin/npm" "publish"
45 error cwd /Users/gtam/projects/nodejs/algos/kmeans
46 error node -v v0.10.31
47 error npm -v 1.4.27
48 verbose exit [ 1, true ]
